syntax = "proto2";

message AgentMessage {
  message RegisterRequest {
    required string name = 1;
  }

  message StatusUpdate {
    required string status = 1;
  }

  message JoinDecision {
    message Accepted {
      map<string, string> settings = 1;
      required string requestId = 2;
    }
    message Declined {
      required string reason = 1;
      required string requestId = 2;
    }
    oneof message {
      Accepted accepted = 1;
      Declined declined = 2;
    }
  }

  oneof message {
    RegisterRequest register = 1;
    JoinDecision join = 2;
    StatusUpdate statusUpdate = 3;
  }
}

message RegistryMessage {
  message RegisterResponse {}

  message Connected {
    required string name = 1;
    map<string, string> settings = 2;
    required string requestId = 3;
  }

  oneof message {
    RegisterResponse registered = 1;
    Connected connected = 2;
  }
}

service AgentEndpoint {
  rpc Register(stream AgentMessage) returns (stream RegistryMessage);
}