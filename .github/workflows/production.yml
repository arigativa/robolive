name: 'Deployment & configuration of production environment'

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - master
  pull_request:
    paths:
      - 'infra/**'

jobs:
  terraform:
    name: 'Managing infrastructure'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/production
    steps: # TODO move this specific steps into single bash/make/whatever program to use it correctly from local as well
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting up Terraform - infrastructure (VM's, network) provisioning tool
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - run: terraform init

      - run: terraform fmt -check

      - name: Calculating infrastructure changes
        if: github.ref != 'refs/heads/master' || github.event_name != 'push'
        run: terraform plan

      - name: Applying infrastrcture changes
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve

  ansible:
    name: 'Configuration of infrastructure (deployment of services)'
    runs-on: ubuntu-latest
    needs: terraform
    defaults:
      run:
        working-directory: infra/playbook
    steps: # TODO move this specific steps into single bash/make/whatever program to use it correctly from local as well
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting up Terraform - infrastructure (VM's, network) provisioning tool
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - run: terraform init
        working-directory: infra/production

      - name: Setting up dependencies tooling
        run: sudo apt-get install python python-pip python-setuptools python-wheel ansible

      - name: Fix Ansible bug (https://github.com/ansible/ansible/issues/27793)
        run: rm -rf ~/.ansible/cp

      - name: Setting up Ansible environment
        run: pip install -r requirements.txt && ansible-galaxy role install -r requirements.yml

      - name: Check Ansible playbook
        run: ansible-playbook -i inventory/ playbook.yml -C -vv
        if: github.ref != 'refs/heads/master' || github.event_name != 'push'

      - name: Run Ansible playbook
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: ansible-playbook -i inventory/ playbook.yml -vv
