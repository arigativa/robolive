// source: Agent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.AgentMessage', null, global);
goog.exportSymbol('proto.AgentMessage.JoinDecision', null, global);
goog.exportSymbol('proto.AgentMessage.JoinDecision.Accepted', null, global);
goog.exportSymbol('proto.AgentMessage.JoinDecision.Declined', null, global);
goog.exportSymbol('proto.AgentMessage.JoinDecision.MessageCase', null, global);
goog.exportSymbol('proto.AgentMessage.MessageCase', null, global);
goog.exportSymbol('proto.AgentMessage.RegisterRequest', null, global);
goog.exportSymbol('proto.AgentMessage.SettingUpdate', null, global);
goog.exportSymbol('proto.AgentMessage.StatusUpdate', null, global);
goog.exportSymbol('proto.RegistryMessage', null, global);
goog.exportSymbol('proto.RegistryMessage.Connected', null, global);
goog.exportSymbol('proto.RegistryMessage.MessageCase', null, global);
goog.exportSymbol('proto.RegistryMessage.RegisterResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.AgentMessage.oneofGroups_);
};
goog.inherits(proto.AgentMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.displayName = 'proto.AgentMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AgentMessage.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.RegisterRequest.displayName = 'proto.AgentMessage.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.StatusUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AgentMessage.StatusUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.StatusUpdate.displayName = 'proto.AgentMessage.StatusUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.SettingUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AgentMessage.SettingUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.SettingUpdate.displayName = 'proto.AgentMessage.SettingUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.JoinDecision = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.AgentMessage.JoinDecision.oneofGroups_);
};
goog.inherits(proto.AgentMessage.JoinDecision, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.JoinDecision.displayName = 'proto.AgentMessage.JoinDecision';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.JoinDecision.Accepted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AgentMessage.JoinDecision.Accepted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.JoinDecision.Accepted.displayName = 'proto.AgentMessage.JoinDecision.Accepted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AgentMessage.JoinDecision.Declined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AgentMessage.JoinDecision.Declined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AgentMessage.JoinDecision.Declined.displayName = 'proto.AgentMessage.JoinDecision.Declined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RegistryMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RegistryMessage.oneofGroups_);
};
goog.inherits(proto.RegistryMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RegistryMessage.displayName = 'proto.RegistryMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RegistryMessage.RegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RegistryMessage.RegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RegistryMessage.RegisterResponse.displayName = 'proto.RegistryMessage.RegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RegistryMessage.Connected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RegistryMessage.Connected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RegistryMessage.Connected.displayName = 'proto.RegistryMessage.Connected';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.AgentMessage.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.AgentMessage.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REGISTER: 1,
  JOIN: 2,
  STATUSUPDATE: 3,
  SETTINGUPDATE: 4
};

/**
 * @return {proto.AgentMessage.MessageCase}
 */
proto.AgentMessage.prototype.getMessageCase = function() {
  return /** @type {proto.AgentMessage.MessageCase} */(jspb.Message.computeOneofCase(this, proto.AgentMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    register: (f = msg.getRegister()) && proto.AgentMessage.RegisterRequest.toObject(includeInstance, f),
    join: (f = msg.getJoin()) && proto.AgentMessage.JoinDecision.toObject(includeInstance, f),
    statusupdate: (f = msg.getStatusupdate()) && proto.AgentMessage.StatusUpdate.toObject(includeInstance, f),
    settingupdate: (f = msg.getSettingupdate()) && proto.AgentMessage.SettingUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage}
 */
proto.AgentMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage;
  return proto.AgentMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage}
 */
proto.AgentMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.AgentMessage.RegisterRequest;
      reader.readMessage(value,proto.AgentMessage.RegisterRequest.deserializeBinaryFromReader);
      msg.setRegister(value);
      break;
    case 2:
      var value = new proto.AgentMessage.JoinDecision;
      reader.readMessage(value,proto.AgentMessage.JoinDecision.deserializeBinaryFromReader);
      msg.setJoin(value);
      break;
    case 3:
      var value = new proto.AgentMessage.StatusUpdate;
      reader.readMessage(value,proto.AgentMessage.StatusUpdate.deserializeBinaryFromReader);
      msg.setStatusupdate(value);
      break;
    case 4:
      var value = new proto.AgentMessage.SettingUpdate;
      reader.readMessage(value,proto.AgentMessage.SettingUpdate.deserializeBinaryFromReader);
      msg.setSettingupdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegister();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.AgentMessage.RegisterRequest.serializeBinaryToWriter
    );
  }
  f = message.getJoin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.AgentMessage.JoinDecision.serializeBinaryToWriter
    );
  }
  f = message.getStatusupdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.AgentMessage.StatusUpdate.serializeBinaryToWriter
    );
  }
  f = message.getSettingupdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.AgentMessage.SettingUpdate.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    login: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.RegisterRequest}
 */
proto.AgentMessage.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.RegisterRequest;
  return proto.AgentMessage.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.RegisterRequest}
 */
proto.AgentMessage.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.AgentMessage.RegisterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.RegisterRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string login = 2;
 * @return {string}
 */
proto.AgentMessage.RegisterRequest.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.setLogin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.clearLogin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.RegisterRequest.prototype.hasLogin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.AgentMessage.RegisterRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.RegisterRequest} returns this
 */
proto.AgentMessage.RegisterRequest.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.RegisterRequest.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.StatusUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.StatusUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.StatusUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.StatusUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.StatusUpdate}
 */
proto.AgentMessage.StatusUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.StatusUpdate;
  return proto.AgentMessage.StatusUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.StatusUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.StatusUpdate}
 */
proto.AgentMessage.StatusUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.StatusUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.StatusUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.StatusUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.StatusUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * required string status = 1;
 * @return {string}
 */
proto.AgentMessage.StatusUpdate.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.StatusUpdate} returns this
 */
proto.AgentMessage.StatusUpdate.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.StatusUpdate} returns this
 */
proto.AgentMessage.StatusUpdate.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.StatusUpdate.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.SettingUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.SettingUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.SettingUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.SettingUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.SettingUpdate}
 */
proto.AgentMessage.SettingUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.SettingUpdate;
  return proto.AgentMessage.SettingUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.SettingUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.SettingUpdate}
 */
proto.AgentMessage.SettingUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.SettingUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.SettingUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.SettingUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.SettingUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string key = 1;
 * @return {string}
 */
proto.AgentMessage.SettingUpdate.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.SettingUpdate} returns this
 */
proto.AgentMessage.SettingUpdate.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.SettingUpdate} returns this
 */
proto.AgentMessage.SettingUpdate.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.SettingUpdate.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string value = 2;
 * @return {string}
 */
proto.AgentMessage.SettingUpdate.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.SettingUpdate} returns this
 */
proto.AgentMessage.SettingUpdate.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.SettingUpdate} returns this
 */
proto.AgentMessage.SettingUpdate.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.SettingUpdate.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.AgentMessage.JoinDecision.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.AgentMessage.JoinDecision.MessageCase = {
  MESSAGE_NOT_SET: 0,
  ACCEPTED: 1,
  DECLINED: 2
};

/**
 * @return {proto.AgentMessage.JoinDecision.MessageCase}
 */
proto.AgentMessage.JoinDecision.prototype.getMessageCase = function() {
  return /** @type {proto.AgentMessage.JoinDecision.MessageCase} */(jspb.Message.computeOneofCase(this, proto.AgentMessage.JoinDecision.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.JoinDecision.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.JoinDecision.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.JoinDecision} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.toObject = function(includeInstance, msg) {
  var f, obj = {
    accepted: (f = msg.getAccepted()) && proto.AgentMessage.JoinDecision.Accepted.toObject(includeInstance, f),
    declined: (f = msg.getDeclined()) && proto.AgentMessage.JoinDecision.Declined.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.JoinDecision}
 */
proto.AgentMessage.JoinDecision.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.JoinDecision;
  return proto.AgentMessage.JoinDecision.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.JoinDecision} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.JoinDecision}
 */
proto.AgentMessage.JoinDecision.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.AgentMessage.JoinDecision.Accepted;
      reader.readMessage(value,proto.AgentMessage.JoinDecision.Accepted.deserializeBinaryFromReader);
      msg.setAccepted(value);
      break;
    case 2:
      var value = new proto.AgentMessage.JoinDecision.Declined;
      reader.readMessage(value,proto.AgentMessage.JoinDecision.Declined.deserializeBinaryFromReader);
      msg.setDeclined(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.JoinDecision.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.JoinDecision.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.JoinDecision} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccepted();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.AgentMessage.JoinDecision.Accepted.serializeBinaryToWriter
    );
  }
  f = message.getDeclined();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.AgentMessage.JoinDecision.Declined.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.JoinDecision.Accepted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.JoinDecision.Accepted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.Accepted.toObject = function(includeInstance, msg) {
  var f, obj = {
    settingsMap: (f = msg.getSettingsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.JoinDecision.Accepted}
 */
proto.AgentMessage.JoinDecision.Accepted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.JoinDecision.Accepted;
  return proto.AgentMessage.JoinDecision.Accepted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.JoinDecision.Accepted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.JoinDecision.Accepted}
 */
proto.AgentMessage.JoinDecision.Accepted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getSettingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.JoinDecision.Accepted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.JoinDecision.Accepted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.Accepted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * map<string, string> settings = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.getSettingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.AgentMessage.JoinDecision.Accepted} returns this
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.clearSettingsMap = function() {
  this.getSettingsMap().clear();
  return this;};


/**
 * required string requestId = 2;
 * @return {string}
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.JoinDecision.Accepted} returns this
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.JoinDecision.Accepted} returns this
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.JoinDecision.Accepted.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.toObject = function(opt_includeInstance) {
  return proto.AgentMessage.JoinDecision.Declined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AgentMessage.JoinDecision.Declined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.Declined.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    requestid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AgentMessage.JoinDecision.Declined}
 */
proto.AgentMessage.JoinDecision.Declined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AgentMessage.JoinDecision.Declined;
  return proto.AgentMessage.JoinDecision.Declined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AgentMessage.JoinDecision.Declined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AgentMessage.JoinDecision.Declined}
 */
proto.AgentMessage.JoinDecision.Declined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AgentMessage.JoinDecision.Declined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AgentMessage.JoinDecision.Declined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AgentMessage.JoinDecision.Declined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string reason = 1;
 * @return {string}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.JoinDecision.Declined} returns this
 */
proto.AgentMessage.JoinDecision.Declined.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.JoinDecision.Declined} returns this
 */
proto.AgentMessage.JoinDecision.Declined.prototype.clearReason = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.hasReason = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string requestId = 2;
 * @return {string}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AgentMessage.JoinDecision.Declined} returns this
 */
proto.AgentMessage.JoinDecision.Declined.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AgentMessage.JoinDecision.Declined} returns this
 */
proto.AgentMessage.JoinDecision.Declined.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.JoinDecision.Declined.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Accepted accepted = 1;
 * @return {?proto.AgentMessage.JoinDecision.Accepted}
 */
proto.AgentMessage.JoinDecision.prototype.getAccepted = function() {
  return /** @type{?proto.AgentMessage.JoinDecision.Accepted} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.JoinDecision.Accepted, 1));
};


/**
 * @param {?proto.AgentMessage.JoinDecision.Accepted|undefined} value
 * @return {!proto.AgentMessage.JoinDecision} returns this
*/
proto.AgentMessage.JoinDecision.prototype.setAccepted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.AgentMessage.JoinDecision.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage.JoinDecision} returns this
 */
proto.AgentMessage.JoinDecision.prototype.clearAccepted = function() {
  return this.setAccepted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.JoinDecision.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Declined declined = 2;
 * @return {?proto.AgentMessage.JoinDecision.Declined}
 */
proto.AgentMessage.JoinDecision.prototype.getDeclined = function() {
  return /** @type{?proto.AgentMessage.JoinDecision.Declined} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.JoinDecision.Declined, 2));
};


/**
 * @param {?proto.AgentMessage.JoinDecision.Declined|undefined} value
 * @return {!proto.AgentMessage.JoinDecision} returns this
*/
proto.AgentMessage.JoinDecision.prototype.setDeclined = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.AgentMessage.JoinDecision.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage.JoinDecision} returns this
 */
proto.AgentMessage.JoinDecision.prototype.clearDeclined = function() {
  return this.setDeclined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.JoinDecision.prototype.hasDeclined = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RegisterRequest register = 1;
 * @return {?proto.AgentMessage.RegisterRequest}
 */
proto.AgentMessage.prototype.getRegister = function() {
  return /** @type{?proto.AgentMessage.RegisterRequest} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.RegisterRequest, 1));
};


/**
 * @param {?proto.AgentMessage.RegisterRequest|undefined} value
 * @return {!proto.AgentMessage} returns this
*/
proto.AgentMessage.prototype.setRegister = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.AgentMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage} returns this
 */
proto.AgentMessage.prototype.clearRegister = function() {
  return this.setRegister(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.prototype.hasRegister = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JoinDecision join = 2;
 * @return {?proto.AgentMessage.JoinDecision}
 */
proto.AgentMessage.prototype.getJoin = function() {
  return /** @type{?proto.AgentMessage.JoinDecision} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.JoinDecision, 2));
};


/**
 * @param {?proto.AgentMessage.JoinDecision|undefined} value
 * @return {!proto.AgentMessage} returns this
*/
proto.AgentMessage.prototype.setJoin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.AgentMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage} returns this
 */
proto.AgentMessage.prototype.clearJoin = function() {
  return this.setJoin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.prototype.hasJoin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StatusUpdate statusUpdate = 3;
 * @return {?proto.AgentMessage.StatusUpdate}
 */
proto.AgentMessage.prototype.getStatusupdate = function() {
  return /** @type{?proto.AgentMessage.StatusUpdate} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.StatusUpdate, 3));
};


/**
 * @param {?proto.AgentMessage.StatusUpdate|undefined} value
 * @return {!proto.AgentMessage} returns this
*/
proto.AgentMessage.prototype.setStatusupdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.AgentMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage} returns this
 */
proto.AgentMessage.prototype.clearStatusupdate = function() {
  return this.setStatusupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.prototype.hasStatusupdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SettingUpdate settingUpdate = 4;
 * @return {?proto.AgentMessage.SettingUpdate}
 */
proto.AgentMessage.prototype.getSettingupdate = function() {
  return /** @type{?proto.AgentMessage.SettingUpdate} */ (
    jspb.Message.getWrapperField(this, proto.AgentMessage.SettingUpdate, 4));
};


/**
 * @param {?proto.AgentMessage.SettingUpdate|undefined} value
 * @return {!proto.AgentMessage} returns this
*/
proto.AgentMessage.prototype.setSettingupdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.AgentMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.AgentMessage} returns this
 */
proto.AgentMessage.prototype.clearSettingupdate = function() {
  return this.setSettingupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AgentMessage.prototype.hasSettingupdate = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RegistryMessage.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.RegistryMessage.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REGISTERED: 1,
  CONNECTED: 2
};

/**
 * @return {proto.RegistryMessage.MessageCase}
 */
proto.RegistryMessage.prototype.getMessageCase = function() {
  return /** @type {proto.RegistryMessage.MessageCase} */(jspb.Message.computeOneofCase(this, proto.RegistryMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RegistryMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.RegistryMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RegistryMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    registered: (f = msg.getRegistered()) && proto.RegistryMessage.RegisterResponse.toObject(includeInstance, f),
    connected: (f = msg.getConnected()) && proto.RegistryMessage.Connected.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RegistryMessage}
 */
proto.RegistryMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RegistryMessage;
  return proto.RegistryMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RegistryMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RegistryMessage}
 */
proto.RegistryMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RegistryMessage.RegisterResponse;
      reader.readMessage(value,proto.RegistryMessage.RegisterResponse.deserializeBinaryFromReader);
      msg.setRegistered(value);
      break;
    case 2:
      var value = new proto.RegistryMessage.Connected;
      reader.readMessage(value,proto.RegistryMessage.Connected.deserializeBinaryFromReader);
      msg.setConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RegistryMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RegistryMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RegistryMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegistered();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RegistryMessage.RegisterResponse.serializeBinaryToWriter
    );
  }
  f = message.getConnected();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RegistryMessage.Connected.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RegistryMessage.RegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.RegistryMessage.RegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RegistryMessage.RegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.RegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    login: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RegistryMessage.RegisterResponse}
 */
proto.RegistryMessage.RegisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RegistryMessage.RegisterResponse;
  return proto.RegistryMessage.RegisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RegistryMessage.RegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RegistryMessage.RegisterResponse}
 */
proto.RegistryMessage.RegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RegistryMessage.RegisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RegistryMessage.RegisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RegistryMessage.RegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.RegisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * required string connectionId = 1;
 * @return {string}
 */
proto.RegistryMessage.RegisterResponse.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.setConnectionid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.clearConnectionid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.RegisterResponse.prototype.hasConnectionid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string login = 2;
 * @return {string}
 */
proto.RegistryMessage.RegisterResponse.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.setLogin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.clearLogin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.RegisterResponse.prototype.hasLogin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string password = 3;
 * @return {string}
 */
proto.RegistryMessage.RegisterResponse.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RegistryMessage.RegisterResponse} returns this
 */
proto.RegistryMessage.RegisterResponse.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.RegisterResponse.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RegistryMessage.Connected.prototype.toObject = function(opt_includeInstance) {
  return proto.RegistryMessage.Connected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RegistryMessage.Connected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.Connected.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    settingsMap: (f = msg.getSettingsMap()) ? f.toObject(includeInstance, undefined) : [],
    requestid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RegistryMessage.Connected}
 */
proto.RegistryMessage.Connected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RegistryMessage.Connected;
  return proto.RegistryMessage.Connected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RegistryMessage.Connected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RegistryMessage.Connected}
 */
proto.RegistryMessage.Connected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getSettingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RegistryMessage.Connected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RegistryMessage.Connected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RegistryMessage.Connected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegistryMessage.Connected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSettingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.RegistryMessage.Connected.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RegistryMessage.Connected} returns this
 */
proto.RegistryMessage.Connected.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RegistryMessage.Connected} returns this
 */
proto.RegistryMessage.Connected.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.Connected.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, string> settings = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.RegistryMessage.Connected.prototype.getSettingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.RegistryMessage.Connected} returns this
 */
proto.RegistryMessage.Connected.prototype.clearSettingsMap = function() {
  this.getSettingsMap().clear();
  return this;};


/**
 * required string requestId = 3;
 * @return {string}
 */
proto.RegistryMessage.Connected.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.RegistryMessage.Connected} returns this
 */
proto.RegistryMessage.Connected.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RegistryMessage.Connected} returns this
 */
proto.RegistryMessage.Connected.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.Connected.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RegisterResponse registered = 1;
 * @return {?proto.RegistryMessage.RegisterResponse}
 */
proto.RegistryMessage.prototype.getRegistered = function() {
  return /** @type{?proto.RegistryMessage.RegisterResponse} */ (
    jspb.Message.getWrapperField(this, proto.RegistryMessage.RegisterResponse, 1));
};


/**
 * @param {?proto.RegistryMessage.RegisterResponse|undefined} value
 * @return {!proto.RegistryMessage} returns this
*/
proto.RegistryMessage.prototype.setRegistered = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.RegistryMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.RegistryMessage} returns this
 */
proto.RegistryMessage.prototype.clearRegistered = function() {
  return this.setRegistered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.prototype.hasRegistered = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Connected connected = 2;
 * @return {?proto.RegistryMessage.Connected}
 */
proto.RegistryMessage.prototype.getConnected = function() {
  return /** @type{?proto.RegistryMessage.Connected} */ (
    jspb.Message.getWrapperField(this, proto.RegistryMessage.Connected, 2));
};


/**
 * @param {?proto.RegistryMessage.Connected|undefined} value
 * @return {!proto.RegistryMessage} returns this
*/
proto.RegistryMessage.prototype.setConnected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.RegistryMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.RegistryMessage} returns this
 */
proto.RegistryMessage.prototype.clearConnected = function() {
  return this.setConnected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RegistryMessage.prototype.hasConnected = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto);
